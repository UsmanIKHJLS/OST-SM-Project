services:
  # Zookeeper for Kafka Coordination
  zookeeper:
    image: bitnami/zookeeper:latest
    environment:
      ALLOW_ANONYMOUS_LOGIN: 1
    ports:
      - "2181:2181"
    networks:
      - kafka_network

  # Kafka for Real-Time Data Streaming
  kafka:
    image: bitnami/kafka:2.8.1
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      ALLOW_PLAINTEXT_LISTENER: 1
      KAFKA_LISTENERS: INSIDE_DOCKER://:9093,OUTSIDE_DOCKER://:9092
      KAFKA_ADVERTISED_LISTENERS: INSIDE_DOCKER://kafka:9093,OUTSIDE_DOCKER://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE_DOCKER:PLAINTEXT,OUTSIDE_DOCKER:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE_DOCKER
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
    ports:
      - "9092:9092"  # Expose external listener
    depends_on:
      - zookeeper
    networks:
      - kafka_network

  # Kafka Manager for Web UI
  kafka-manager:
    image: hlebalbau/kafka-manager:stable
    environment:
      ZK_HOSTS: "zookeeper:2181"
      APPLICATION_SECRET: "random-secret"
    ports:
      - "9000:9000"
    depends_on:
      - zookeeper
      - kafka
    networks:
      - kafka_network

  # Grafana for Visualization
  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    depends_on:
      - zookeeper
      - kafka
    networks:
      - kafka_network

  influxdb:
    image: influxdb:2.0
    ports:
      - "8086:8086"
    environment:
      DOCKER_INFLUXDB_INIT_MODE: setup
      DOCKER_INFLUXDB_INIT_USERNAME: admin
      DOCKER_INFLUXDB_INIT_PASSWORD: password
      DOCKER_INFLUXDB_INIT_ORG: example-org
      DOCKER_INFLUXDB_INIT_BUCKET: industry_data
      DOCKER_INFLUXDB_INIT_RETENTION: 30d
    depends_on:
      - kafka
      - zookeeper
    networks:
      - kafka_network

  # Kafka Topic Creation Service
  kafka-create-topics:
    image: bitnami/kafka:latest
    depends_on:
      - kafka
    volumes:
      - ./configs/create_kafka_topics.sh:/create_kafka_topics.sh
    entrypoint: ["bash", "/create_kafka_topics.sh"]
    networks:
      - kafka_network

networks:
  kafka_network:
    driver: bridge
