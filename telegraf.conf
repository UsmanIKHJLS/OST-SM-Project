[global_tags]

[agent]
  interval = "60s"
  round_interval = true
  metric_batch_size = 1000
  metric_buffer_limit = 10000
  collection_jitter = "0s"
  flush_interval = "10s"
  flush_jitter = "0s"
  precision = ""
  hostname = "192.168.xxx.xxx"
  omit_hostname = false

# Output for InfluxDB

[[outputs.influxdb]]
  urls = ["http://influxdb:8086"]
  database = "influx"
  timeout = "5s"
  username = "telegraf"
  password = "metricsmetricsmetricsmetrics"

  fieldpass = [
    "tcp.connection.fin",
    "tcp.connection.rst",
    "tcp.connection.sack",
    "tcp.connection.syn",
    "tcp.flags.ack",
    "tcp.flags.fin",
    "tcp.flags.push",
    "tcp.flags.reset",
    "tcp.flags.syn",
    "mqtt.conack.flags",
    "mqtt.conflags",
    "mqtt.qos",
    "class",
    "label"
]

# Input for collecting system metrics
[[inputs.cpu]]
  percpu = true
  totalcpu = true
  collect_cpu_time = false
  report_active = false

[[inputs.disk]]
  ignore_fs = ["tmpfs", "devtmpfs", "devfs", "iso9660", "overlay", "aufs", "squashfs"]

[[inputs.diskio]]

[[inputs.kernel]]

[[inputs.mem]]

[[inputs.processes]]

[[inputs.swap]]

[[inputs.system]]

# Input to consume data from Kafka
[[inputs.kafka_consumer]]
  brokers = ["kafka:9092"]
  topics = ["kf-topic"]
  consumer_group = "telegraf_metrics_consumer"
  offset = "oldest"
  data_format = "json"

  json_string_fields = [
     "tcp.connection.fin",
    "tcp.connection.rst",
    "tcp.connection.sack",
    "tcp.connection.syn",
    "tcp.flags.ack",
    "tcp.flags.fin",
    "tcp.flags.push",
    "tcp.flags.reset",
    "tcp.flags.syn",
    "mqtt.conack.flags",
    "mqtt.conflags",
    "mqtt.qos",
    "class",
    "label"
]

  name_override = "kafka_topic"